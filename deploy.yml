include:
    - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

stages:
    - build
    - test
    - deploy
    - destroy

variables:
    TF_VAR_AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
    TF_VAR_AWS_SECRET_KEY: ${AWS_SECRET_KEY}
    TF_VAR_AWS_REGION: ${AWS_REGION}
    TF_VAR_ENVIRONMENT_NAME: ${CI_PROJECT_PATH_SLUG}_${CI_PROJECT_ID}_${CI_COMMIT_REF_SLUG}
    TF_VAR_SHORT_ENVIRONMENT_NAME: ${CI_PROJECT_ID}-${CI_COMMIT_REF_SLUG}
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state/${CI_COMMIT_REF_SLUG}

cache:
    paths:
        - .terraform

.needs_aws_vars:
    rules:
        -   if: '$AWS_ACCESS_KEY && $AWS_SECRET_KEY && $AWS_REGION'
            when: on_success
        -   when: never

.needs_aws_vars_for_manual:
    rules:
        -   if: '$AWS_ACCESS_KEY && $AWS_SECRET_KEY && $AWS_REGION'
            when: manual
        -   when: never

# Use AutoDev Ops for build stage
include:
  remote: https://gitlab.com/gitlab-org/gitlab/-/raw/master/lib/gitlab/ci/templates/Jobs/Build.gitlab-ci.yml

AWS Provision:
    stage: build
    image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
    extends: .needs_aws_vars
    resource_group: terraform
    script:
        - wget https://gitlab.com/gitlab-org/5-minute-production-app/deploy-template/-/raw/master/infra.tf
        - gitlab-terraform init
        - gitlab-terraform plan
        - gitlab-terraform plan-json
        - gitlab-terraform apply
    artifacts:
        paths:
            - infra.tf
        reports:
            terraform: plan.json

Deploy App:
    stage: deploy
    image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
    extends: .needs_aws_vars
    resource_group: deploy
    script:
        - wget https://gitlab.com/gitlab-org/5-minute-production-app/deploy-template/-/raw/dz-use-autodevops-build/deploy.sh
        - chmod a+x deploy.sh
        - ./deploy.sh
    artifacts:
        reports:
            dotenv: deploy.env
    environment:
        name: $CI_COMMIT_REF_SLUG
        url: http://$DYNAMIC_ENVIRONMENT_URL
        on_stop: Destroy

Destroy:
    stage: destroy
    image: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
    extends: .needs_aws_vars_for_manual
    script:
        - gitlab-terraform destroy -auto-approve
    environment:
        name: $CI_COMMIT_REF_SLUG
        action: stop
